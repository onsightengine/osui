/********** .PropertyList **********/

.PropertyList {
    width: 100%;
}

/* --- HEADER --- */

.PropertyHeaderTitle {
    position: relative;
    display: flex;
    flex-direction: row;
    align-items: center;
    width: calc(100% - 0.5em);
    overflow: hidden;
    font-size: 110%;
    background-color: rgba(var(--icon), 0.35);
    border: solid var(--border-small) rgba(var(--shadow), 0.65);
    border-radius: var(--radius-large);
    margin: var(--pad-small) 0.25em;		/* vertical | horizontal */
    padding: var(--pad-small) 0.5em;		/* vertical | horizontal */
    box-shadow: inset 0 0 var(--pad-small) 0 rgba(var(--midlight), 0.75); /* inner-glow */
    text-shadow: var(--minus) var(--pixel) rgba(var(--shadow), 0.5);
}

.PropertyHeaderIcon > * {
    filter: var(--drop-shadow);
}

.PropertyHeaderIcon {
    flex-grow: 0;
    flex-shrink: 0;
    font-size: 110%;
    position: relative; /* anchor to children with 'posiiton: absolute' */
    display: flex;
    width: calc(var(--arrow-size) * 3);
    height: calc(var(--arrow-size) * 3);
    min-width: calc(var(--arrow-size) * 3);
    min-height: calc(var(--arrow-size) * 3);
}

.PropertyHeaderText {
    flex-grow: 1;
    flex-shrink: 2;
    color: rgba(var(--text-light), 1.0);
    font-size: 100%;
    overflow: hidden;
    text-align: left;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding-left: 0.5em;
}

/* --- ROW --- */

.PropertyRow {
    position: relative;
    min-height: var(--row-height);
}

.PropertyRow:hover .PropertyLeft {
    color: rgba(var(--highlight), 0.8);
}

.PropertyRow:hover .PropertyLeft .Image {
    filter: brightness(250%);
}

.PropertySpace {
    flex: 0 0 auto;
    min-width: 0.2em;
}

.PropertyLeft {
    position: relative;
    flex-shrink: 0;
    margin: 0;
    padding-left: var(--pad-medium);
    height: 100%;
    min-height: var(--row-height);

    text-align: left;
    text-transform: capitalize;
}
.LeftTabSpacing {
    padding-left: 1em;
}

.PropertyRight {
    flex-shrink: 0;
    margin: auto;
    margin-right: var(--pad-small) !important;
    justify-content: left;
    text-align: left;
    height: 100%;
    min-height: var(--row-height);
}

.PropertyLeftHalf { width: 50% !important; }
.PropertyLeftFifth { width: 45% !important; }
.PropertyLeftThird { width: 30% !important; }

.PropertyRightHalf { width: calc(50% - var(--pad-small)) !important; }
.PropertyRightFifth { width: calc(55% - var(--pad-small)) !important; }
.PropertyRightThird { width: calc(70% - var(--pad-small)) !important; }

.PropertyFull {
    margin: auto;
    margin-right: var(--pad-small) !important;
    justify-content: center;
    text-align: center;
    height: 100%;
    min-height: var(--row-height);
    width: calc(100% - var(--pad-small)) !important;
}

.PropertyFull > * {
    flex: 1 1 auto;
    min-height: var(--row-height);
    min-width: 0;
    margin: auto;
    height: 100%;
}

/* --- RIGHT SIDE OF ROW --- */

.PropertyRight > button:not(.PropertyTinyRow):not(.PropertyButton),
.PropertyRight > .TextBox:not(.PropertyTinyRow),
.PropertyRight > .Number:not(.PropertyTinyRow),
.PropertyRight > .SlideContainer:not(.PropertyTinyRow) {
    flex: 1 1 auto;
    min-height: var(--row-height);
    min-width: 0;
    margin: auto;
    text-align: left;
    height: 100%;
}

.PropertyRight > button:not(.PropertyTinyRow):not(.PropertyButton):not(.MenuButton) {
    text-align: center;
}

/* Right side of Property Box flex fill when using multiple controls */
.PropertyTinyRow {
    --min-width: 2em;

    flex: 2 2 var(--min-width);
    min-height: var(--row-height);
    min-width: var(--min-width);
    height: 100%;
}

/* --- BUTTON --- */
/* Button appearing in right column of PropertyList, fixed size */
.PropertyButton {
    position: relative;
    min-height: var(--row-height);
    min-width: 2.1em;
}

/* Button appearing in right column of PropertyList, flex box */
.PropertyButtonFlex {
    flex: 1 1 auto;
    position: relative;
    display: block;
    overflow: hidden;
    margin: 0 0.05em;
    padding: 0 0.1em;
    height: var(--row-height);
    white-space: nowrap;
}

/********** .TreeList **********/

.TreeList {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: left;
    overflow: hidden;

    color: rgba(var(--text), 1.0);
    background-color: rgba(var(--background-dark), 0.25);

    border: solid var(--border-small) rgba(var(--shadow), 0.25);
    border-radius: var(--radius-small);
    box-shadow: inset 0 0 var(--pad-small) 0 rgba(var(--midlight), 0.75); /* inner-glow */

    margin: var(--pad-x-small);

    cursor: default;
    outline: none; /* for macos */
}

/********** .TreeList .Option **********/

.TreeList .Option {
    position: relative;
    text-align: left;
    border: var(--border-small) solid transparent;
    padding: var(--pad-x-small);
    width: 100%;
    white-space: nowrap;
}
.TreeList .Option:hover:not(.NoSelect) {
    color: rgba(var(--text-light), 1.0);
    background-color: rgba(var(--background-dark), 0.2);
}

.TreeList .Option.Active:not(.NoSelect) {
    color: rgba(var(--highlight), 1.0);
    background-color: rgba(var(--icon-light), 0.4);
    border-top: var(--border-small) solid rgba(var(--shadow), 0.25);
    border-bottom: var(--border-small) solid rgba(var(--shadow), 0.25);
    border-radius: var(--radius-small);
}
.TreeList .Option.ActiveTop:not(.NoSelect) {
    border-bottom: var(--border-small) solid transparent;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}
.TreeList .Option.ActiveBottom:not(.NoSelect) {
    border-top: var(--border-small) solid transparent;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
}

.TreeList .Option.Drag:not(.Active) {
    border: var(--border-small) solid rgba(var(--icon-light), 1.0);
    border-radius: var(--radius-small);
}
.TreeList .Option.DragTop:not(.Active) {
    border-top: var(--border-small) solid rgba(var(--icon-light), 1.0);
}
.TreeList .Option.DragBottom:not(.Active) {
    border-bottom: var(--border-small) solid rgba(var(--icon-light), 1.0);
}

/********** .TreeList .Opener **********/

.TreeList .Opener {
    display: inline-block;
    width: 1em;
    height: 1em;
    margin: 0 0.25em;

    vertical-align: top;
    text-align: center;
}

.TreeList .Opener.Open:after {
    content: '-';
}

.TreeList .Opener.Closed:after {
    content: '+';
}

/********** .DragImage **********/

.DragImage {
    display: flex;
    position: absolute;
    margin: 0;
    padding: 0;
    overflow: hidden;
    left: 0;
    top: 0;
    background-color: transparent;
    box-shadow: none;
    border: none;
    border-radius: var(--radius-small);
    z-index: 100000; /* Drag Clone */
}
